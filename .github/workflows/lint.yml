name: Lint
on:
  push:
    branches:
      - develop
      - master
      - staging
      - release/*
      - feature/*
      - bugfix/*
      - hotfix/*
#  pull_request:
#    branches: [develop, master]
#    types: [synchronize, opened, reopened, ready_for_review]

defaults:
  run:
    shell: bash


concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-lint"
  cancel-in-progress: true


permissions:
  contents: read

jobs:
#  changes:
##    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
#    name: check files
#    runs-on: ubuntu-latest
#    timeout-minutes: 3
#    outputs:
#      lint: ${{ steps.changes.outputs.lint }}
#      docker: ${{ steps.changes.outputs.docker_base }}
#    steps:
#      - run: git config --global --add safe.directory $(realpath .)
#      - uses: actions/checkout@v4
#      - id: changes
#        name: Check for backend file changes
#        uses: dorny/paths-filter@v3 # v3.0.0
#        with:
#          base: ${{ github.ref }}
#          token: ${{ github.token }}
#          filters: .github/file-filters.yml

  flake8:
#    needs: changes
#    if: github.event.pull_request.draft == false && needs.changes.outputs.lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12.6'
      - name: Install requirements
        run: pip install flake8 pycodestyle
      - name: Check syntax
        # Stop the build if there are Python syntax errors or undefined names
        run: flake8 src/
  isort:
#    needs: changes
#    if: github.event.pull_request.draft == false && needs.changes.outputs.lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12.6'
      - name: Install requirements
        run: pip install isort
      - name: iSort
        run: isort src/ --check-only
  black:
#    needs: changes
#    if: github.event.pull_request.draft == false && needs.changes.outputs.lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12.6'
      - name: Install requirements
        run: pip install "black==22.12.0"
      - name: Black
        run: black src/ --check --config pyproject.toml
