[project]
name = "Aurora"
version = "2.0"
description = ""
readme = "README.md"
license = {text = "MIT"}

authors = [
    {name = "sax", email = "s.apostolico@gmail.com"},
    {name = "Domenico DiNicola", email = "dom.dinicola@gmail.com"},
]
requires-python = ">=3.12"
dependencies = [
    "Faker",
    "Markdown",
    "Pillow",
    "beautifulsoup4",
    "celery",
    "channels-redis",
    "channels[daphne]",
    "cryptography",
    "django-admin-extra-buttons",
    "django-admin-ordering",
    "django-admin-sync",
    "django-adminactions",
    "django-adminfilters",
    "django-anymail[mailjet]",
    "django-appconf",
    "django-bitfield",
    "django-click",
    "django-concurrency",
    "django-constance",
    "django-cors-headers",
    "django-csp",
    "django-debug-toolbar",
    "django-environ",
    "django-filter",
    "django-flags",
    "django-front-door",
    "django-hijack",
    "django-import-export",
    "django-jsoneditor",
    "django-mdeditor",
    "django-mptt",
    "django-picklefield",
    "django-pwa",
    "django-redis",
    "django-regex",
    "django-reversion",
    "django-reversion-compare",
    "django-simple-captcha",
    "django-simple-math-captcha",
    "django-smart-admin",
    "django-smart-env",
    "django-strategy-field",
    "django-sysinfo",
    "django-tinymce",
    "django<5.1",
    "djangorestframework",
    "djangorestframework-datatables",
    "htmlmin",
    "jmespath",
    "jsonpickle",
    "mini-racer",
    "natural-keys",
    "psycopg2-binary",
    "py-mini-racer",
    "pycryptodome",
    "pygments",
    "pyquery",
    "qrcode",
    "sentry-sdk",
    "setuptools>=75.6.0",
    "social-auth-app-django",
    "soupsieve",
    "sqlparse",
    "uwsgi",
]

[uv]
package = true

[project.optional-dependencies]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-awesome-pages-plugin",
    "mkdocstrings-python",
    "mkdocs-gen-files",
]

[tool.uv]
dev-dependencies = [
    "black",
    "coverage",
    "django-stubs[compatible-mypy]",
    "django-webtest",
    "factory-boy",
    "flake8",
    "flake8-html",
    "freezegun",
    "ipython",
    "isort",
    "pdbpp",
    "pre-commit",
    "pyflakes",
    "pytest-asyncio",
    "pytest-coverage",
    "pytest-django",
    "pytest-echo",
    "pytest-html",
    "pytest-pythonpath",
    "pytest-selenium",
    "pytest-variables",
    "pytest-xdist",
    "pytest",
    "tox",
    "watchdog",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools]
packages = ["aurora", "dbtemplates"]

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.pytest_cache
  | \.tox
  | \.venv
  | ~build
  | build
  | ops
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 120
default_section = "THIRDPARTY"
known_first_party = []
known_django = "django"
sections = ["FUTURE","STDLIB","DJANGO","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
include_trailing_comma = true
skip = ["migrations", "snapshots", ".venv"]


[tool.nitpick]
    style = [
        "github://unicef/hope-code-conventions@main/django/django.toml"
    ]
    cache = "1 day"
