# Generated by Django 5.1.5 on 2025-01-22 12:08

import aurora.core.compat
import aurora.core.forms
import aurora.core.models
import concurrency.fields
import django.contrib.postgres.fields.citext
import django.contrib.postgres.operations
import django.core.validators
import django.db.models.deletion
import django.forms.fields
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [
        ("core", "0001_initial"),
        ("core", "0002_initial"),
        ("core", "0003_customfieldtype_base_type"),
        ("core", "0004_auto_20220308_1056"),
        ("core", "0005_remove_customfieldtype_clean"),
        ("core", "0006_flexform_base_type"),
        ("core", "0007_auto_20220308_2049"),
        ("core", "0008_auto_20220310_0517"),
        ("core", "0009_auto_20220310_1033"),
        ("core", "0010_auto_20220310_1520"),
        ("core", "0011_flexform_version"),
        ("core", "0012_auto_20220311_0514"),
        ("core", "0013_optionset_columns"),
        ("core", "0014_optionset_version"),
        ("core", "0015_auto_20220313_1209"),
        ("core", "0016_alter_optionset_version"),
        ("core", "0017_formset_max_num"),
        ("core", "0018_rename_required_formset_min_num"),
        ("core", "0019_alter_formset_unique_together"),
        ("core", "0020_auto_20220314_0657"),
        ("core", "0021_auto_20220315_1639"),
        ("core", "0022_auto_20220318_0516"),
        ("core", "0023_alter_formset_description"),
        ("core", "0024_formset_enabled"),
        ("core", "0025_flexformfield_enabled"),
        ("core", "0026_formset_advanced"),
        ("core", "0027_alter_formset_advanced"),
        ("core", "0028_auto_20220321_1743"),
        ("core", "0029_alter_validator_target"),
        ("core", "0030_alter_flexformfield_name"),
        ("core", "0031_validator_trace"),
        ("core", "0032_auto_20220328_0647"),
        ("core", "0033_auto_20220402_0954"),
        ("core", "0034_auto_20220402_1124"),
        ("core", "0035_auto_20220402_1124"),
        ("core", "0036_optionset_last_update_date"),
        ("core", "0037_auto_20220402_1152"),
        ("core", "0038_auto_20220417_0554"),
        ("core", "0039_auto_20220417_0919"),
        ("core", "0040_auto_20220420_1248"),
        ("core", "0041_auto_20220505_1751"),
        ("core", "0042_auto_20220506_0601"),
        ("core", "0043_rename_name_validator_label"),
        ("core", "0044_auto_20220511_0452"),
        ("core", "0045_remove_validator_message"),
        ("core", "0046_alter_validator_target"),
        ("core", "0047_validator_count_errors"),
        ("core", "0048_auto_20230126_1226"),
        ("core", "0049_auto_20230214_1915"),
        ("core", "0050_auto_20230307_1139"),
        ("core", "0051_flexformfield_validation"),
        ("core", "0052_flexform_advanced"),
        ("core", "0053_auto_20230321_0604"),
        ("core", "0054_auto_20231123_0605"),
        ("core", "0055_alter_project_slug"),
        ("core", "0056_case_insensitive_collation"),
        ("core", "0057_alter_customfieldtype_name_alter_flexform_name_and_more"),
        ("core", "0058_alter_flexformfield_ordering_alter_formset_ordering"),
    ]

    dependencies = []

    operations = [
        django.contrib.postgres.operations.CITextExtension(),
        migrations.CreateModel(
            name="Validator",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", django.contrib.postgres.fields.citext.CICharField(max_length=255, unique=True)),
                ("message", models.CharField(max_length=255)),
                ("code", models.TextField(blank=True, null=True)),
                (
                    "target",
                    models.CharField(
                        choices=[("form", "Form"), ("field", "Field"), ("formset", "Formset"), ("module", "Module")],
                        max_length=10,
                    ),
                ),
                ("trace", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="FlexForm",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", django.contrib.postgres.fields.citext.CICharField(max_length=255, unique=True)),
                (
                    "validator",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"target": "form"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.validator",
                    ),
                ),
                ("base_type", aurora.core.compat.StrategyClassField(default=aurora.core.forms.FlexFormBaseForm)),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("last_update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "FlexForm",
                "verbose_name_plural": "FlexForms",
            },
        ),
        migrations.CreateModel(
            name="CustomFieldType",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    django.contrib.postgres.fields.citext.CICharField(
                        max_length=100,
                        unique=True,
                        validators=[django.core.validators.RegexValidator("[A-Z][a-zA-Z0-9_]*")],
                    ),
                ),
                ("attrs", models.JSONField(default=dict)),
                ("regex", aurora.core.compat.RegexField(blank=True, null=True)),
                ("base_type", aurora.core.compat.StrategyClassField(default=django.forms.fields.CharField)),
                (
                    "validator",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"target": "field"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.validator",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FlexFormField",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("label", models.CharField(max_length=2000)),
                ("name", django.contrib.postgres.fields.citext.CICharField(blank=True, max_length=100)),
                ("field_type", aurora.core.compat.StrategyClassField()),
                ("choices", models.CharField(blank=True, max_length=2000, null=True)),
                ("required", models.BooleanField(default=False)),
                ("regex", aurora.core.compat.RegexField(blank=True, null=True)),
                ("advanced", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "flex_form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="fields", to="core.flexform"
                    ),
                ),
                (
                    "validator",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"target": "field"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.validator",
                    ),
                ),
                ("ordering", models.PositiveIntegerField(default=0, verbose_name="ordering")),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("enabled", models.BooleanField(default=True)),
                ("last_update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "FlexForm Field",
                "verbose_name_plural": "FlexForm Fields",
                "unique_together": {("flex_form", "name")},
                "ordering": ["ordering"],
            },
        ),
        migrations.CreateModel(
            name="FormSet",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", django.contrib.postgres.fields.citext.CICharField(max_length=255)),
                ("extra", models.IntegerField(default=0)),
                ("dynamic", models.BooleanField(default=True)),
                ("flex_form", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.flexform")),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="formsets", to="core.flexform"
                    ),
                ),
                ("ordering", models.PositiveIntegerField(default=0, verbose_name="ordering")),
                ("min_num", models.IntegerField(default=0)),
                ("max_num", models.IntegerField(blank=True, default=None, null=True)),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("description", models.TextField(blank=True, max_length=2000, null=True)),
                ("title", models.CharField(blank=True, max_length=300, null=True)),
                ("enabled", models.BooleanField(default=True)),
                ("advanced", models.JSONField(blank=True, default=dict)),
                (
                    "validator",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"target": "formset"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.validator",
                    ),
                ),
                ("last_update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "FormSet",
                "verbose_name_plural": "FormSets",
                "ordering": ["ordering"],
                "unique_together": {("parent", "flex_form", "name")},
            },
        ),
        migrations.CreateModel(
            name="OptionSet",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    django.contrib.postgres.fields.citext.CICharField(
                        max_length=100, unique=True, validators=[django.core.validators.RegexValidator("[a-z0-9-_]")]
                    ),
                ),
                ("data", models.TextField(blank=True, null=True)),
                ("separator", models.CharField(blank=True, default="", max_length=1)),
                (
                    "columns",
                    models.CharField(
                        blank=True,
                        default="0,0,-1",
                        help_text="column order. Es: 'pk,parent,label' or 'pk,label'",
                        max_length=20,
                    ),
                ),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("description", models.CharField(blank=True, max_length=1000, null=True)),
                ("comment", models.CharField(blank=True, default="#", max_length=1)),
            ],
        ),
        migrations.RunSQL(
            sql="UPDATE core_flexform SET version=1;\nUPDATE core_optionset SET version=1;\n"
            "UPDATE core_flexformfield SET version=1;\nUPDATE core_formset SET version=1;",
            reverse_sql="",
        ),
        migrations.AddField(
            model_name="optionset",
            name="last_update_date",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="validator",
            name="last_update_date",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="validator",
            name="version",
            field=concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number"),
        ),
        migrations.AddField(
            model_name="validator",
            name="active",
            field=models.BooleanField(blank=True, default=False, help_text="Enable/Disable validator."),
        ),
        migrations.AddField(
            model_name="validator",
            name="draft",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Testing purposes: draft validator are enabled only for staff users.",
            ),
        ),
        migrations.AlterField(
            model_name="validator",
            name="trace",
            field=models.BooleanField(
                default=False, help_text="Debug/Testing purposes: trace validator invocation on Sentry."
            ),
        ),
        migrations.AddField(
            model_name="optionset",
            name="languages",
            field=models.CharField(
                blank=True, default="-;-;", help_text="language code of each column.", max_length=255, null=True
            ),
        ),
        migrations.AddField(
            model_name="optionset",
            name="locale",
            field=models.CharField(default="en-us", help_text="default language code", max_length=5),
        ),
        migrations.AddField(
            model_name="optionset",
            name="parent_col",
            field=models.IntegerField(default=-1, help_text="Column number of the indicating parent element"),
        ),
        migrations.AddField(
            model_name="optionset",
            name="pk_col",
            field=models.IntegerField(default=0, help_text="ID column number"),
        ),
        migrations.AlterModelOptions(
            name="flexform",
            options={"verbose_name": "Flex Form", "verbose_name_plural": "Flex Forms"},
        ),
        migrations.AlterModelOptions(
            name="flexformfield",
            options={"ordering": ["ordering"], "verbose_name": "Flex Field", "verbose_name_plural": "Flex Fields"},
        ),
        migrations.RenameField(
            model_name="validator",
            old_name="name",
            new_name="label",
        ),
        migrations.AddField(
            model_name="validator",
            name="name",
            field=django.contrib.postgres.fields.citext.CICharField(
                blank=True, max_length=255, null=True, unique=True, verbose_name="Function Name"
            ),
        ),
        migrations.AlterField(
            model_name="validator",
            name="label",
            field=django.contrib.postgres.fields.citext.CICharField(max_length=255),
        ),
        migrations.RemoveField(
            model_name="validator",
            name="message",
        ),
        migrations.AlterField(
            model_name="validator",
            name="target",
            field=models.CharField(
                choices=[
                    ("form", "Form"),
                    ("field", "Field"),
                    ("formset", "Formset"),
                    ("module", "Module"),
                    ("handler", "Handler"),
                    ("script", "Script"),
                ],
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="validator",
            name="count_errors",
            field=models.BooleanField(default=False, help_text="Count failures"),
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", django.contrib.postgres.fields.citext.CICharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="core.organization",
                    ),
                ),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", django.contrib.postgres.fields.citext.CICharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=100)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="projects", to="core.organization"
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="core.project",
                    ),
                ),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
            ],
            options={
                "unique_together": {("slug", "organization")},
            },
        ),
        migrations.AlterField(
            model_name="flexformfield",
            name="name",
            field=django.contrib.postgres.fields.citext.CICharField(
                blank=True, max_length=100, validators=[django.core.validators.RegexValidator("^[a-z_0-9]*$")]
            ),
        ),
        migrations.AlterField(
            model_name="flexformfield",
            name="regex",
            field=aurora.core.compat.RegexField(
                blank=True, null=True, validators=[aurora.core.models.RegexPatternValidator()]
            ),
        ),
        migrations.AddField(
            model_name="flexformfield",
            name="validation",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="flexform",
            name="advanced",
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name="flexform",
            name="project",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.project"),
        ),
        django.contrib.postgres.operations.CreateCollation(
            name="_",
            locale="und-u-ks-level2",
            provider="icu",
            deterministic=False,
        ),
        migrations.AlterField(
            model_name="customfieldtype",
            name="name",
            field=models.CharField(
                db_collation="_",
                max_length=100,
                unique=True,
                validators=[django.core.validators.RegexValidator("[A-Z][a-zA-Z0-9_]*")],
            ),
        ),
        migrations.AlterField(
            model_name="flexform",
            name="name",
            field=models.CharField(db_collation="_", max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name="flexformfield",
            name="name",
            field=models.CharField(
                blank=True,
                db_collation="_",
                max_length=100,
                validators=[django.core.validators.RegexValidator("^[a-z_0-9]*$")],
            ),
        ),
        migrations.AlterField(
            model_name="formset",
            name="name",
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name="optionset",
            name="name",
            field=models.CharField(
                db_collation="_",
                max_length=100,
                unique=True,
                validators=[django.core.validators.RegexValidator("[a-z0-9-_]")],
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="name",
            field=models.CharField(db_collation="_", max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name="project",
            name="name",
            field=models.CharField(db_collation="_", max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name="validator",
            name="label",
            field=models.CharField(db_collation="_", max_length=255),
        ),
        migrations.AlterField(
            model_name="validator",
            name="name",
            field=models.CharField(
                blank=True, db_collation="_", max_length=255, null=True, unique=True, verbose_name="Function Name"
            ),
        ),
        migrations.AlterField(
            model_name="flexformfield",
            name="ordering",
            field=models.PositiveIntegerField(db_index=True, default=0, verbose_name="ordering"),
        ),
        migrations.AlterField(
            model_name="formset",
            name="ordering",
            field=models.PositiveIntegerField(db_index=True, default=0, verbose_name="ordering"),
        ),
    ]
